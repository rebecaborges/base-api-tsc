openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample OpenApi in Typescript
  description: "This is a sample API."
  contact:
    name: Rebeca Borges
    url: https://github.com/rebecaborges
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT.html
paths:
  /ping:
    get:
      x-eov-operation-id: ping
      x-eov-operation-handler: routes/ping
      description: Returns response body to verify that the API is working
      responses:
        '200':
          description: OK
  /login:
    post:
      x-eov-operation-id: login
      x-eov-operation-handler: routes/login
      description: Create a JWT token after logging in with username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                password:
                  type: string
                  description: user password
      responses:
        '200':
          description: User token
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
  /users:
    get:
      x-eov-operation-id: users
      x-eov-operation-handler: routes/getAllRoute
      responses:
        '200':
          description: Returns list as all users already registered
          content:
            application/json:
              schema:
                type: array
    post:
      x-eov-operation-id: users
      x-eov-operation-handler: routes/createRoute
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: user name
                email:
                  type: string
                  description: user email
                password:
                  type: string
                  description: user password
                phone:
                  type: number
                  description: user phone
                isActive:
                  type: boolean
                  description: user active
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object

 